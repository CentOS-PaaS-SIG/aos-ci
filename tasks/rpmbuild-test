#!/bin/bash
set +e

base_dir="$(dirname $0)/.."

HOMEDIR=$(pwd)
rm -rf ${HOMEDIR}/${fed_repo}/output
mkdir -p ${HOMEDIR}/${fed_repo}/output
rm -rf ${HOMEDIR}/${fed_repo}/rpmbuild
mkdir -p ${HOMEDIR}/${fed_repo}/rpmbuild
pushd $base_dir/config/Dockerfiles/rpmbuild
# Install docker
which docker
if [ "$?" != 0 ]; then echo "ERROR: DOCKER NOT INSTALLED\nSTATUS: $?"; exit 1; fi
# Only build if it is not built already
sudo systemctl start docker
if [ "$(sudo docker images | grep rpmbuild-container)" == "" ]; then sudo docker build -t rpmbuild-container . ; fi
sudo docker run --privileged --cap-add=SYS_ADMIN -v ${HOMEDIR}/${fed_repo}/output:/home/${fed_repo}/output -v ${HOMEDIR}/${fed_repo}/rpmbuild:/home/rpmbuild -t -i -e fed_repo="${fed_repo}" -e fed_branch="${fed_branch}" -e fed_rev="${fed_rev}" rpmbuild-container
popd
# Move logs to location which can be rsynced
cp -rp ${HOMEDIR}/${fed_repo}/output/logs ${HOMEDIR}
# Find out RSYNC_BRANCH name so we can rsync over an empty repo if it DNE
RSYNC_BRANCH=${fed_branch}
if [ "${fed_branch}" = "master" ]; then
    RSYNC_BRANCH=rawhide
fi
mkdir ${RSYNC_BRANCH}
mkdir repo
# Write uuid to a lock file and store a backup
uuidgen > file.lock
cp file.lock uuid.saved
while true; do
     # Check if lock exists on remote server
     while [[ $(rsync --dry-run -avz file.lock fedora-atomic@artifacts.ci.centos.org::fedora-atomic/${RSYNC_BRANCH}/repo/lockdir) != *"file.lock"* ]]; do
          sleep 60
     done
     # Push lock file with uuid to remote server
     rsync -avz --ignore-existing file.lock fedora-atomic@artifacts.ci.centos.org::fedora-atomic/${RSYNC_BRANCH}/repo/lockdir/
     # Pull lock file back
     rsync -avz fedora-atomic@artifacts.ci.centos.org::fedora-atomic/${RSYNC_BRANCH}/repo/lockdir/file.lock file.lock
     # If uuid matches, we can proceed
     if [[ $(diff file.lock uuid.saved) == "" ]]; then
          break
     fi
     # Kill backgrounded jobs on exit
     function clean_up {
     # Delete the rsync lock we placed
     rsync -vr --delete $(mktemp -d)/ fedora-atomic@artifacts.ci.centos.org::fedora-atomic/${RSYNC_BRANCH}/repo/lockdir/
     }
     trap clean_up EXIT SIGHUP SIGINT SIGTERM
     sleep 60
done
# Rsync the empty directories over first, then the repo directory
rsync -arv ${RSYNC_BRANCH}/ fedora-atomic@artifacts.ci.centos.org::fedora-atomic
rsync -arv repo/ fedora-atomic@artifacts.ci.centos.org::fedora-atomic/${RSYNC_BRANCH}
rsync --delete --stats -a ${HOMEDIR}/${fed_repo}/output/${fed_repo}_repo fedora-atomic@artifacts.ci.centos.org::fedora-atomic/${RSYNC_BRANCH}/repo
if [ "$?" != 0 ]; then echo "ERROR: RSYNC REPO\nSTATUS: $?"; exit 1; fi
rm -rf ${RSYNC_BRANCH}
rm -rf repo
# Update repo manifest file on artifacts.ci.centos.org
rsync --delete --stats -a fedora-atomic@artifacts.ci.centos.org::fedora-atomic/${RSYNC_BRANCH}/repo/manifest.txt .
# Remove repo name from file if it exists so it isn't there twice
sed -i "/${fed_repo}_repo/d" manifest.txt
echo "${fed_repo}_repo $(date --utc +%FT%T%Z)" >> manifest.txt
sort manifest.txt -o manifest.txt
rsync --delete -stats -a manifest.txt fedora-atomic@artifacts.ci.centos.org::fedora-atomic/${RSYNC_BRANCH}/repo

exit 0
