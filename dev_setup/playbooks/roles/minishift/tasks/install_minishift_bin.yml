---
# Install minishift

- name: Query for minishift compressed binary
  shell: curl "https://api.github.com/repos/minishift/minishift/releases/tags/{{minishift_version}}"
  register: release

- name: "Pull down and extract minishift binary to {{ ansible_env.HOME }}"
  unarchive:
    src: "{{ item.browser_download_url }}"
    dest: "{{ ansible_env.HOME }}"
    remote_src: yes
  with_items: "{{(release.stdout | from_json).assets}}"
  when: (item.name | regex_search('linux-amd64.tgz$')) and (minishift_bin.stat.exists == false or force_minishift_install|bool == true)

- name: Set minishift version
  set_fact:
    download_version: "{{ minishift_version | regex_replace('^v(.+)', '\\1') }}"

- name: minishift source dir
  set_fact:
      minishift_src_dir: "minishift-{{download_version}}-linux-amd64"

- name: "Create a new {{ minishift_dest_dir }} if it doesn't exist"
  file:
    path: "{{ minishift_dest_dir }}"
    state: directory
  when: (minishift_bin.stat.exists == false or force_minishift_install|bool == true)

- name: "Copy minishift version files to {{ ansible_env.HOME }}/minishift/"
  shell: cp {{ ansible_env.HOME }}/{{ minishift_src_dir }}/* {{ minishift_dest_dir }}/
  when: (minishift_bin.stat.exists == false or force_minishift_install|bool == true)

- name: "Delete {{ ansible_env.HOME }}/{{ minishift_src_dir }}"
  file:
    path: "{{ ansible_env.HOME }}/{{ minishift_src_dir }}"
    state: absent
  when: (minishift_bin.stat.exists == false or force_minishift_install|bool == true)

- include: set_minishift_path.yml

